import { EyeOutlined } from '@ant-design/icons';
import type { ToolMessage } from '@/types/message';

const mockData = {
  type: 'tool',
  toolCallId: '34d6fe69-7540-4741-bb22-7a609a945faf',
  toolName: 'read',
  args: {
    file_path: 'CHANGELOG.md',
  },
  state: 'result',
  step: 1,
  result: {
    success: true,
    data: {
      filePath: 'CHANGELOG.md',
      content:
        "## 0.0.34\n\n`2025-05-22`\n\n\n## 0.0.33\n\n`2025-05-22`\n\n- refactor: extract query context logic into separate function by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.32\n\n`2025-05-21`\n\n- fix: enhance log HTML date and text display by [@sorrycc](https://github.com/sorrycc)\n- feat: add log command to view JSON logs as HTML by [@Wu-kung](https://github.com/Wu-kung) in [#22](https://github.com/umijs/takumi/pull/22)\n- feat: add whole-file edit mode by [@Holden Hu](https://github.com/Holden Hu) in [#40](https://github.com/umijs/takumi/pull/40)\n- fix: improve markdown render by [@Roc](https://github.com/Roc) in [#35](https://github.com/umijs/takumi/pull/35)\n- refactor: integrate mcp server into main cli and remove separate mcp-cli (but don't enable for now since its not ready) by [@sorrycc](https://github.com/sorrycc)\n- feat: update Gemini Flash model to preview-05-20 by [@sorrycc](https://github.com/sorrycc)\n- feat: add MCP server integration and CLI tools by [@Wu-kung](https://github.com/Wu-kung) in [#38](https://github.com/umijs/takumi/pull/38)\n- fix: handle newline-separated thoughts in commit message by [@阿平](https://github.com/阿平) in [#41](https://github.com/umijs/takumi/pull/41)\n- feat: add XML format validation guide prompt by [@阿平](https://github.com/阿平) in [#37](https://github.com/umijs/takumi/pull/37)\n- feat: add askQuery and editQuery types to PluginContext by [@阿平](https://github.com/阿平) in [#39](https://github.com/umijs/takumi/pull/39)\n- feat: update Gemini Pro to preview-05-06 by [@sorrycc](https://github.com/sorrycc)\n- fix: spelling error with approvalMode by [@Roc](https://github.com/Roc) in [#34](https://github.com/umijs/takumi/pull/34)\n\n\n## 0.0.31\n\n`2025-05-14`\n\n- fix: update approvalModel to approvalMode in tool implementations by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.30\n\n`2025-05-14`\n\n- fix: update MCP server check to handle empty objects by [@sorrycc](https://github.com/sorrycc)\n- feat: add resolve dependency for plugin path resolution by [@sorrycc](https://github.com/sorrycc)\n- refactor: update config handling and quiet mode logic by [@sorrycc](https://github.com/sorrycc)\n- feat: support hierarchical configuration from global and project level files by [@jalever](https://github.com/jalever) in [#28](https://github.com/umijs/takumi/pull/28)\n\n\n## 0.0.29\n\n`2025-05-13`\n\n- feat: add --print-token-usage option to display token usage by [@sorrycc](https://github.com/sorrycc)\n- refactor: move auto model selection to plugin by [@sorrycc](https://github.com/sorrycc)\n- refactor: rename keyword-context.ts to keywordContext.ts by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.28\n\n`2025-05-13`\n\n- feat: support approval-mode option by [@moonlit](https://github.com/moonlit) in [#29](https://github.com/umijs/takumi/pull/29)\n- feat: add token calculator by [@Holden Hu](https://github.com/Holden Hu) in [#31](https://github.com/umijs/takumi/pull/31)\n- fix: add error handling for update check in CLI by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.27\n\n`2025-05-12`\n\n\n## 0.0.26\n\n`2025-05-12`\n\n- refactor: Move update check after package.json load by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.25\n\n`2025-05-12`\n\n- style: Colorize update notification messages by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.24\n\n`2025-05-12`\n\n- feat: display CLI version by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.23\n\n`2025-05-12`\n\n- style: Remove ellipsis from thinking spinner message by [@sorrycc](https://github.com/sorrycc)\n- refactor: Use fs.readFileSync to load package.json by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.22\n\n`2025-05-12`\n\n- feat: add upgear configuration by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.21\n\n`2025-05-12`\n\n- feat: add automatic update check by [@sorrycc](https://github.com/sorrycc)\n- feat: add interactive mode to commit command by [@阿平](https://github.com/阿平) in [#27](https://github.com/umijs/takumi/pull/27)\n- refactor: update plugin command structure for clarity by [@sorrycc](https://github.com/sorrycc)\n- refactor: log intro earlier and update model selection warning by [@sorrycc](https://github.com/sorrycc)\n- feat: add language option for commit messages by [@sorrycc](https://github.com/sorrycc)\n- refactor: rename llm directory to llms and update imports by [@sorrycc](https://github.com/sorrycc)\n- fix: remove unnecessary closing bracket in config by [@sorrycc](https://github.com/sorrycc)\n- feat: enhance model selection logic and update environment configuration by [@Holden Hu](https://github.com/Holden Hu) in [#21](https://github.com/umijs/takumi/pull/21)\n- feat: add startTime to file changes in session plugin by [@sorrycc](https://github.com/sorrycc)\n- feat: enable plugins to react to file edits and creations by [@sorrycc](https://github.com/sorrycc)\n- feat: add execution confirmation before running shell commands by [@阿平](https://github.com/阿平) in [#24](https://github.com/umijs/takumi/pull/24)\n\n\n## 0.0.20\n\n`2025-05-08`\n\n- build: Configure API Extractor for d.ts bundling by [@sorrycc](https://github.com/sorrycc)\n- build: Update dependencies and set moduleResolution to bundler by [@sorrycc](https://github.com/sorrycc)\n- refactor: Log raw text from LLM responses by [@sorrycc](https://github.com/sorrycc)\n- fix: Use plugin manager result to update queryContext by [@sorrycc](https://github.com/sorrycc)\n- feat: add 'tak' alias for takumi CLI by [@sorrycc](https://github.com/sorrycc)\n- feat: increase commit message length limit, fix retry logging by [@sorrycc](https://github.com/sorrycc)\n- fix: correct BatchTool creation in tools.ts by [@sorrycc](https://github.com/sorrycc)\n- feat: support dynamic package name and version in CLI by [@sorrycc](https://github.com/sorrycc)\n- feat: add run command to execute shell commands via AI by [@阿平](https://github.com/阿平) in [#20](https://github.com/umijs/takumi/pull/20)\n- fix: remove <thought> tags and enhance retry log by [@sorrycc](https://github.com/sorrycc)\n- fix: improve commit message generation retry log by [@sorrycc](https://github.com/sorrycc)\n- fix: add retry logic to commit message generation by [@sorrycc](https://github.com/sorrycc)\n- feat: support markdown format output by [@coderPerseus](https://github.com/coderPerseus) in [#17](https://github.com/umijs/takumi/pull/17)\n- feat: add --plugin option to load plugins by [@sorrycc](https://github.com/sorrycc)\n- feat: add commands plugin hook by [@sorrycc](https://github.com/sorrycc)\n- feat: add config command by [@jalever](https://github.com/jalever) in [#16](https://github.com/umijs/takumi/pull/16)\n\n\n## 0.0.19\n\n`2025-04-29`\n\n- fix: use resolvedConfig for mcpServers in buildContext by [@sorrycc](https://github.com/sorrycc)\n- feat: track tools used in query session by [@sorrycc](https://github.com/sorrycc)\n- feat: pass tool information to query plugin hooks by [@sorrycc](https://github.com/sorrycc)\n- refactor: remove model alias file by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.18\n\n`2025-04-29`\n\n- feat: add help command and --help flag by [@sorrycc](https://github.com/sorrycc)\n- refactor: handle optional modelId in buildContext by [@sorrycc](https://github.com/sorrycc)\n- refactor: replace home dir with ~ in workspace path by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.17\n\n`2025-04-29`\n\n- feat: add lint command and implement linting functionality by [@NanLan](https://github.com/NanLan) in [#15](https://github.com/umijs/takumi/pull/15)\n- feat: support test command and test-cmd param by [@NanLan](https://github.com/NanLan) in [#12](https://github.com/umijs/takumi/pull/12)\n- refactor: disable file context inclusion in main context by [@sorrycc](https://github.com/sorrycc)\n- feat: add generalInfo plugin hook by [@sorrycc](https://github.com/sorrycc)\n- feat: handle model object in context building by [@sorrycc](https://github.com/sorrycc)\n- feat: add file context management for prompt references by [@阿平](https://github.com/阿平) in [#13](https://github.com/umijs/takumi/pull/13)\n\n\n## 0.0.16\n\n`2025-04-28`\n\n- refactor: ensure user input logging for act and ask commands by [@sorrycc](https://github.com/sorrycc)\n- feat: add interactive mode to act and ask commands by [@sorrycc](https://github.com/sorrycc)\n- refactor: simplify prompt handling in act command by [@sorrycc](https://github.com/sorrycc)\n- refactor: extract plan logic in act command by [@sorrycc](https://github.com/sorrycc)\n- refactor: consolidate logger utility by [@sorrycc](https://github.com/sorrycc)\n- refactor: enhance CLI interaction using clack-prompts by [@sorrycc](https://github.com/sorrycc)\n- feat: enhance CLI output using clack-prompts by [@sorrycc](https://github.com/sorrycc)\n- feat: add --follow-style flag to analyze repo commit history by [@NanLan](https://github.com/NanLan) in [#8](https://github.com/umijs/takumi/pull/8)\n- feat: add keyword context plugin for automatic codebase analysis by [@阿平](https://github.com/阿平) in [#7](https://github.com/umijs/takumi/pull/7)\n- feat: add ask command to cli by [@NanLan](https://github.com/NanLan) in [#5](https://github.com/umijs/takumi/pull/5)\n- refactor: remove redundant sessionPath assignment by [@sorrycc](https://github.com/sorrycc)\n- feat(config): support --api-key argument by [@coderPerseus](https://github.com/coderPerseus) in [#6](https://github.com/umijs/takumi/pull/6)\n\n\n## 0.0.15\n\n`2025-04-27`\n\n- refactor: remove debug log from runCli function by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.14\n\n`2025-04-27`\n\n- feat: add debug log and close MCP clients in runCli by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.13\n\n`2025-04-27`\n\n- fix: handle potentially undefined mcpConfig when creating clients by [@sorrycc](https://github.com/sorrycc)\n- fix: add iteration limit to plan modification by [@sorrycc](https://github.com/sorrycc)\n- fix: validate prompt inputs are not empty by [@sorrycc](https://github.com/sorrycc)\n- feat: allow interactive plan modification before execution by [@sorrycc](https://github.com/sorrycc)\n- feat: add --plan option to generate and confirm execution plan by [@sorrycc](https://github.com/sorrycc)\n- feat: cli run cwd use config.root by [@聪小陈](https://github.com/聪小陈) in [#4](https://github.com/umijs/takumi/pull/4)\n- fix: correct line number indexing in watch test cases by [@sorrycc](https://github.com/sorrycc)\n- fix: remove build:type from build script and make it fail-safe by [@sorrycc](https://github.com/sorrycc)\n- feat: add build types by [@聪小陈](https://github.com/聪小陈) in [#3](https://github.com/umijs/takumi/pull/3)\n\n\n## 0.0.12\n\n`2025-04-25`\n\n- feat: add error logging to session by [@sorrycc](https://github.com/sorrycc)\n- feat: add final response and duration to session log by [@sorrycc](https://github.com/sorrycc)\n- feat: add session logging plugin by [@sorrycc](https://github.com/sorrycc)\n- feat: add query lifecycle plugin hooks by [@sorrycc](https://github.com/sorrycc)\n- refactor: rename plugin directory to pluginManager by [@sorrycc](https://github.com/sorrycc)\n- feat: add cli and tool lifecycle plugin hooks by [@sorrycc](https://github.com/sorrycc)\n- perf: dynamically import commands for faster startup by [@sorrycc](https://github.com/sorrycc)\n- fix: ensure written files end with a newline by [@sorrycc](https://github.com/sorrycc)\n- feat: add language configuration option by [@sorrycc](https://github.com/sorrycc)\n- fix: prevent --plan in act and set OS dynamically in prompt by [@sorrycc](https://github.com/sorrycc)\n- fix: improve error handling and skip large files in watch command by [@sorrycc](https://github.com/sorrycc)\n- fix: remove marker and update prompt for AI comments in watch by [@sorrycc](https://github.com/sorrycc)\n- fix: enhance commit command with config checks and validation by [@sorrycc](https://github.com/sorrycc)\n- fix: check git exists and improve large diff handling in commit by [@sorrycc](https://github.com/sorrycc)\n- feat: add --no-verify option to commit command by [@sorrycc](https://github.com/sorrycc)\n- feat: add watch command by [@sorrycc](https://github.com/sorrycc)\n- feat: add support for model aliases by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.11\n\n`2025-04-23`\n\n- fix: check for remote before pushing in commit command by [@sorrycc](https://github.com/sorrycc)\n- style: improve code formatting and import order by [@sorrycc](https://github.com/sorrycc)\n- feat: add version command and update module setting by [@sorrycc](https://github.com/sorrycc)\n- fix: exclude lock files from staged diff in commit command by [@sorrycc](https://github.com/sorrycc)\n- feat: add commit command to generate commit messages by [@sorrycc](https://github.com/sorrycc)\n- refact: enhance plugin context by adding argv and updating config hook signature by [@sorrycc](https://github.com/sorrycc)\n- refact: update import statements for consistency and enhance error messaging in tools by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.10\n\n`2025-04-22`\n\n- refact: reorganize imports in config, index, and query files for consistency and clarity by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.9\n\n`2025-04-22`\n\n\n## 0.0.8\n\n`2025-04-22`\n\n- refact: add type checking command to package.json, update model import path, and remove obsolete plugin manager tests by [@sorrycc](https://github.com/sorrycc)\n- refact: move tool-related functions to a new tools.ts file and update imports in query.ts by [@sorrycc](https://github.com/sorrycc)\n- refact: restructure imports and introduce new context management files by [@sorrycc](https://github.com/sorrycc)\n- refact: reorganize query imports and remove unused .gitkeep file by [@sorrycc](https://github.com/sorrycc)\n- refact: consolidate query functions and remove deprecated files by [@sorrycc](https://github.com/sorrycc)\n- refact: enhance plugin manager with new hook types and add tests by [@sorrycc](https://github.com/sorrycc)\n- refact: streamline model handling in query functions by [@sorrycc](https://github.com/sorrycc)\n- refact: lots of changes by [@sorrycc](https://github.com/sorrycc)\n- refact: add plugin manager by [@sorrycc](https://github.com/sorrycc)\n- feat: add BatchTool by [@sorrycc](https://github.com/sorrycc)\n- feat: add WebFetchTool by [@sorrycc](https://github.com/sorrycc)\n- feat(TodoTool): enhance descriptions for todo management tools to promote proactive usage by [@sorrycc](https://github.com/sorrycc)\n- feat(TodoTool): implement task management tools and integrate with config by [@sorrycc](https://github.com/sorrycc)\n- fix(FileEditTool): catch error by [@sorrycc](https://github.com/sorrycc)\n- refactor(mcp): update tool name serialization format and remove unused deserialization function by [@sorrycc](https://github.com/sorrycc)\n- feat: add jsonrepair for improved JSON parsing error handling by [@sorrycc](https://github.com/sorrycc)\n- refactor(BashTool): enhance execution response structure to include success status by [@sorrycc](https://github.com/sorrycc)\n- refactor: rename getAllTools to getTools and streamline tool retrieval process by [@sorrycc](https://github.com/sorrycc)\n- feat: add timeout functionality to tool execution with error handling by [@sorrycc](https://github.com/sorrycc)\n- fix: update requirement file formatting and enhance error handling in BashTool execution by [@sorrycc](https://github.com/sorrycc)\n- feat: tool calling with structure prompt by [@sorrycc](https://github.com/sorrycc)\n- feat: add new OpenRouter model 'optimus-alpha' to the model list in model.ts by [@sorrycc](https://github.com/sorrycc)\n- feat: update model.ts to include new Grok models and integrate XAI SDK by [@sorrycc](https://github.com/sorrycc)\n- feat: add new OpenRouter model 'quasar-alpha' to the model list in model.ts by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.7\n\n`2025-04-07`\n\n\n## 0.0.6\n\n`2025-04-07`\n\n- feat: enhance context handling in getConfig and runAct to support conditional tool loading based on environment variable by [@sorrycc](https://github.com/sorrycc)\n- feat: update model lists in README and model.ts to include new OpenRouter and OpenAI models by [@sorrycc](https://github.com/sorrycc)\n- feat: add clean option to runPlan for removing requirements file by [@sorrycc](https://github.com/sorrycc)\n- Merge pull request #1 from umijs/docs-tips by @chencheng (云谦)\n- Update README.md by @chencheng (云谦)\n\n\n## 0.0.5\n\n`2025-03-28`\n\n\n## 0.0.4\n\n`2025-03-28`\n\n- refact: enhance MCP server configuration by improving server naming and command handling logic by [@sorrycc](https://github.com/sorrycc)\n- refact: update MCP client creation to use new transport types and improve server handling by [@sorrycc](https://github.com/sorrycc)\n- fix: rename default server naming convention to server-{index} in MCP server config by [@sorrycc](https://github.com/sorrycc)\n- feat: add act command as an alias by [@sorrycc](https://github.com/sorrycc)\n- feat: support --mcp to specify the mcp server by [@sorrycc](https://github.com/sorrycc)\n- fix: remove existing requirements file before updating with new prompt in plan command by [@sorrycc](https://github.com/sorrycc)\n- refact: update file handling in plan command and adjust .gitignore for new file names by [@sorrycc](https://github.com/sorrycc)\n- feat: implement requirements management in plan command with file read/write functionality by [@sorrycc](https://github.com/sorrycc)\n- fix: update getCodebaseContext call in CLI to use an empty object for improved context handling by [@sorrycc](https://github.com/sorrycc)\n- feat: enhance CLI usage with new options for small model and codebase context by [@sorrycc](https://github.com/sorrycc)\n- feat: add getCodebaseContext function and temporary CLI command for testing by [@sorrycc](https://github.com/sorrycc)\n- fix: update context assignment in plan command to use config.context by [@sorrycc](https://github.com/sorrycc)\n- feat: add Inference models and enhance logging in query and act commands by [@sorrycc](https://github.com/sorrycc)\n- refact: act init and plan commands by [@sorrycc](https://github.com/sorrycc)\n- feat: new plan mode by [@sorrycc](https://github.com/sorrycc)\n- feat: basic plan mode by [@sorrycc](https://github.com/sorrycc)\n- feat: enhance logging in CLI and query handling, adding support for new model and improved debug messages by [@sorrycc](https://github.com/sorrycc)\n- feat: add new models to the list and update CLI stream handling by [@sorrycc](https://github.com/sorrycc)\n- refactor: rename tool name serialization functions and enhance deserialization for improved logging by [@sorrycc](https://github.com/sorrycc)\n- feat: enhance logging and CLI prompt display by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.3\n\n`2025-03-20`\n\n- feat: improve logs by [@sorrycc](https://github.com/sorrycc)\n- fix: remove unnecessary source map flag from CLI shebang for cleaner execution by [@sorrycc](https://github.com/sorrycc)\n\n\n## 0.0.2\n\n`2025-03-19`\n\n\n## 0.0.1\n\n`2025-03-19`\n\n\n## 0.0.0\n\n`2025-03-19`\n\n- feat: add context by [@sorrycc](https://github.com/sorrycc)\n- feat: add GrokMirror API key and model support; update test function to accept arguments for enhanced testing by [@sorrycc](https://github.com/sorrycc)\n- fix: update README to replace hardcoded API key with placeholder for user configuration by [@sorrycc](https://github.com/sorrycc)\n- feat: add support for MCP servers in README to highlight new feature by [@sorrycc](https://github.com/sorrycc)\n- feat: add .env.example file for API key configuration; update CONTRIBUTING and README for usage instructions and examples by [@sorrycc](https://github.com/sorrycc)\n- feat: implement tool name normalization in getClientsTools function to ensure consistent naming conventions by [@sorrycc](https://github.com/sorrycc)\n- feat: add support for custom MCP configuration file in CLI; enhance error handling and improve code readability by [@sorrycc](https://github.com/sorrycc)\n- feat: add MCP client management for enhanced tool integration; update CLI to utilize new clients and improve error handling by [@sorrycc](https://github.com/sorrycc)\n- refact: clean code by [@sorrycc](https://github.com/sorrycc)\n- feat: enhance CLI functionality with new test command; update model configurations and query handling for streaming responses by [@sorrycc](https://github.com/sorrycc)\n- feat: update general rules and CLI configurations; add build/test commands, code style guidelines, and error handling practices by [@sorrycc](https://github.com/sorrycc)\n- feat: implement initialization command with custom prompt and add product details by [@sorrycc](https://github.com/sorrycc)\n- feat: introduce ArchitectTool for analyzing technical requirements and generating actionable implementation plans by [@sorrycc](https://github.com/sorrycc)\n- feat: add ThinkTool for logging thoughts and brainstorming; update tool integration in getAllTools and CLI by [@sorrycc](https://github.com/sorrycc)\n- feat: implement AgentTool, BashTool, FileReadTool, FileWriteTool, GlobTool, GrepTool, and LsTool for enhanced file and command management capabilities by [@sorrycc](https://github.com/sorrycc)\n- feat: add GlobTool for file pattern matching and integrate it into the query function; update dependencies in package.json and pnpm-lock.yaml by [@sorrycc](https://github.com/sorrycc)\n- feat: add GrepTool for pattern searching in files and directories, and include lodash-es as a dependency by [@sorrycc](https://github.com/sorrycc)\n- feat: introduce FileWriteTool for writing files to the local filesystem and integrate it into the query function by [@sorrycc](https://github.com/sorrycc)\n- feat: add LsTool for directory listing and update model configurations in CLI and model files by [@sorrycc](https://github.com/sorrycc)\n- feat: add support for Ollama AI provider and update model selection in CLI by [@sorrycc](https://github.com/sorrycc)\n- feat: implement interactive CLI with tool execution and message management by [@sorrycc](https://github.com/sorrycc)\n- feat: add BashTool and integrate bash command execution by [@sorrycc](https://github.com/sorrycc)\n- feat: expand model support with multiple providers and model aliases by [@sorrycc](https://github.com/sorrycc)\n- feat: enhance model validation with explicit error handling by [@sorrycc](https://github.com/sorrycc)\n- refactor: modularize model selection and improve logging by [@sorrycc](https://github.com/sorrycc)\n- feat: add CLI tool with AI query functionality and supporting tools by [@sorrycc](https://github.com/sorrycc)\n- Initial commit by [@sorrycc](https://github.com/sorrycc)\n\n\n",
      totalLines: 400,
    },
  },
};

export default function ReadRender({ message }: { message?: ToolMessage }) {
  if (!message) return null;
  const { args, result } = message;

  return (
    <div className="flex items-center gap-2 text-sm text-gray-500">
      <EyeOutlined />
      <div>read {args?.file_path as string}</div>
      <div className="flex-1 text-right">
        {(result?.data as { totalLines?: number })?.totalLines} lines
      </div>
    </div>
  );
}
